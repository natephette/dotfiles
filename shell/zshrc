# Determine the real path of this file so that it can be sourced from anywhere.
SOURCE=${(%):-%N}

# Resolve $SOURCE until the file is no longer a symlink.
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"

  # If $SOURCE was a relative symlink, we need to resolve it
  # relative to the path where the symlink file was located.
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done

# This is the real path to this file.
DOTFILES_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

unset SOURCE
unset DIR

# Path to oh-my-zsh.
export ZSH=$DOTFILES_DIR/oh-my-zsh

# oh-my-zsh custom directory (because oh-my-zsh is submoduled).
ZSH_CUSTOM=$DOTFILES_DIR/oh-my-zsh.custom

# oh-my-zsh theme.
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status dir)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vcs virtualenv)

# zsh plugins.
plugins=(
    git
    python
    docker
    docker-compose
    aws
    extract
    themes
    vi-mode
    zsh_reload
    colored-man-pages
)

# Show timestamps in zsh history.
HIST_STAMPS="mm/dd/yyyy"

# Start oh-my-zsh.
source $ZSH/oh-my-zsh.sh

# Make neovim the default editor.
export VISUAL=nvim
export EDITOR="$VISUAL"

# Don't clear the screen after quitting a man page.
export MANPAGER="less -X"

# Paths.
export PATH="$(brew --prefix)/sbin:$PATH"
export PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# Aliases.
alias ls="ls --color -G"
alias py="python"
alias ipy="ipython"
alias rb="ruby"
alias docker_prune_images="docker images | awk '/<none>/ { print $3 }' | xargs docker rmi"
alias vim="nvim"
alias ag='ag --color-match "0;31" --pager "less -FRSX"'
alias grep="grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} --exclude='*.pyc'"

# Increase the max number of open file descriptors allowed.
ulimit -n 4096

# Initialize pyenv and pyenv-virtualenv.
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi
