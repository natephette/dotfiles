" Skip initialization for vim-tiny or vim-small
if !1 | finish | endif

" Improvement
set nocompatible

" Initialize bundles
if has('vim_starting')
    let path = fnamemodify(resolve(expand('<sfile>:p')), ':h')
    exec ':source ' . path . '/neobundles.vim'
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Font
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

try
    set guifont=Inconsolata-dz:h10
catch
endtry

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Colors
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

try
    colorscheme desertEx
catch
    colorscheme desert
endtry

" Enable syntax highlighting
syntax on

" Override desertEx's cursor line (lighter color and no underline)
hi CursorLine term=none cterm=none ctermbg=239 guibg=Grey30

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Keep 1000 lines of history
set history=1000

" Detect external changes to files while they're opened in vim
set autoread

" Show the cursor line
set cursorline

" Enable line numbers
set number

" Show the line and column number of the cursor position
set ruler

" Don't wrap lines
set nowrap

" Don't show modes (visual, insert, etc). We have lightline for that.
set noshowmode

" Use 2 screen lines for the command line
set cmdheight=2

" No bells!
set noerrorbells novisualbell

" Redraw only when necessary
set lazyredraw

" Enable the mouse in terminal vim
set mouse=a

" Open horizontal splits below the active pane
set splitbelow

" Open vertical splits to the right of the active pane
set splitright

" Scroll file with cursor 7 lines from the top or bottom of the file
set so=7

" Always show status lines
set laststatus=2

" Configure backspace to behave sanely
set backspace=eol,start,indent

" Show command in bottom bar
set showcmd

" Hide buffers instead of closing them
set hidden

" Enable mode line
set modeline

" Don't automatically add line separators to the end of files
set noeol

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tabs and indentation
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Load filetype-specific indent files
filetype indent on

" Number of visual spaces per tab
set tabstop=4

" Number of spaces in tab when editing
set softtabstop=4 shiftwidth=4

" Replace tabs with spaces
set expandtab

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Search
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Highlight all matched patterns while searching
set hlsearch

" Search as characters are entered
set incsearch

" Ignore case while searching
set ignorecase

" With ignorecase enabled, patterns with uppercase letters are case sensitive
set smartcase

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Swaps and backups
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Don't create backup files
set nobackup nowritebackup

" Don't create swap files
set noswapfile

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Wild menu
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable auto-completion on command line
set wildmenu

" List all matches and complete till longest common string
set wildmode=list:longest

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=","
let g:mapleader=","

nmap <leader>w :w<CR>
nmap <leader>wq :wq<CR>
nmap <leader>q :q<CR>

map <C-n> :NERDTreeToggle<CR>

" Option + j/k keys to move lines up and down
nnoremap ∆ :m+<CR>==
nnoremap ˚ :m-2<CR>==
inoremap ∆ <Esc>:m+<CR>==gi
inoremap ˚ <Esc>:m-2<CR>==gi
vnoremap ∆ :m'>+<CR>gv=gv
vnoremap ˚ :m-2<CR>gv=gv

"nnoremap <silent> <F5> :!clear;python %<CR>

" Shift + up/down scrolls the page 1 line at a time
map <Down> <C-E>
map <Up> <C-Y>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

if exists(":Tabularize")
    nmap <Leader>a= :Tabularize /=<CR>
    vmap <Leader>a= :Tabularize /=<CR>
    nmap <Leader>a: :Tabularize /:\zs<CR>
    vmap <Leader>a: :Tabularize /:\zs<CR>
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Load filetype-specific plugin files
filetype plugin on

" Call flake8 every time a Python file is saved
"autocmd BufWritePost *.py call Flake8()

" Close vim if the only window left open is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Close YCM preview window often
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_autoclose_preview_window_after_insertion=1

" Lightline configuration
let g:lightline = {
\   'colorscheme': 'wombat',
\ }
